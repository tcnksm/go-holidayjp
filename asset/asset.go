// Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// asset/holidays.yml
package asset

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetHolidaysYml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x9d\xdd\x92\x1c\xd5\x72\x85\xef\xfd\x14\xf3\x02\x13\x51\xf9\x53\x5d\xb9\xe7\xe9\xce\x48\xf2\x81\x73\xe0\x38\x38\xc6\xfc\x04\x04\xc1\x85\x25\x63\x14\x20\x1b\x30\xe1\x30\x48\xd6\xc3\x8c\x7a\x46\x77\xbc\x82\xa3\x7a\xef\x2a\xa9\x7b\xe7\x5a\x55\x8e\xe0\x2a\x57\x4d\xab\x27\xd7\xee\xee\x95\xdf\x64\x17\xd7\xd7\xd7\xff\x20\x65\x1a\xae\x07\xb9\x1e\xe4\xe6\xea\xf8\x8f\x8f\xef\xbf\x78\xb6\x96\x64\xbc\xb9\xba\xff\xf0\x93\x37\xbf\xfd\x76\x77\xfb\xe2\x9d\xa0\xd7\x32\x5f\xfb\xfb\x6f\xc7\xaf\x5f\xbd\xfd\xf7\x2f\x8f\xaf\x7f\x3d\x93\xed\x5a\xe5\xe6\xea\xfe\xcb\x67\xc7\x0f\xff\x7c\x26\xf8\xb5\x96\x9b\xab\xe3\xd3\xef\x1f\xbe\xfa\xe0\xed\xf3\xcf\x1e\xfe\xe5\xdb\x77\xda\x78\x3d\xd8\xcd\xd5\xfd\x9f\x7f\xbe\xff\xe5\xb3\xfa\x98\x67\xda\x78\x73\x75\x77\xfb\xe9\xdd\xed\xf7\x77\x8f\x1e\x9d\x3d\x66\xa9\x4f\xf2\xb3\x1f\xde\xfe\xe9\xf6\x42\x50\xbb\xb9\x7a\xf8\xee\xa3\x8b\x67\x21\xf3\x7f\x37\x57\x6f\x5e\x7d\xfa\xf6\xd1\xcf\x67\x82\xd4\xa7\xf0\xf9\x07\xc7\x8f\x3f\xbf\x10\xe6\x87\x3a\x7e\xf4\xf4\xf8\xd7\xff\xba\x7f\xf2\xed\xdb\x1f\xbe\x79\x27\x4b\xdf\x3a\x41\xad\x13\xde\x3a\x41\xad\x13\xd2\x3a\x21\xad\x13\xd2\x3a\x41\xad\x3b\x09\xea\x7d\xeb\x04\xb5\x4e\x50\xeb\x84\xb7\x4e\xfb\xd6\x29\x6a\x9d\xf2\xd6\xe9\xa9\x75\x43\xdf\x3a\x25\xad\x53\xd2\x3a\x25\xad\x53\xd4\x3a\x45\xa7\x4e\x51\xeb\x14\xb5\x4e\x79\xeb\xac\x6f\x9d\xa1\xd6\x19\x6f\x9d\xa1\x53\x67\xa4\x75\x27\xcd\x86\x4e\xbb\xba\xff\xf8\x3f\xee\xbf\x7e\xfd\xe6\xe5\xdf\xdf\x5d\x08\x7b\x6c\xa4\xc7\x86\x7a\x6c\xa8\xc7\x96\x9d\xdb\xe4\xf9\x00\x27\x0c\x39\x61\xdc\x09\xef\x9d\x70\xe4\x84\x73\x27\x1c\x39\xe1\xc4\x09\x27\x0d\x76\xd2\xe0\xaa\x1d\x3a\xad\xeb\x98\x23\x27\xaa\x70\x38\x17\xf2\x1f\xcf\xfc\x72\xe4\x84\x23\x27\xaa\xe0\xe7\x42\xf2\x0f\x52\xbf\xc6\xde\xaf\x11\xf9\x35\x72\xbf\x46\xe4\xd7\x48\xfc\x1a\x89\x5f\x23\xf1\x6b\x44\x36\x8c\xe8\xfd\x7a\x44\x0d\x1e\x51\x83\xc7\xad\xd6\xcd\xb2\x67\x72\xe7\xc2\xa1\x6f\xf3\x01\xb5\xf9\xc0\xdb\x7c\x40\xef\xed\x07\xd2\xe6\x03\x69\xf3\x81\xb4\xf9\x80\xda\x7c\x40\xe7\xf8\x80\xda\x5c\x05\x39\x17\x92\x46\x01\x33\x0e\xdc\x8c\xa9\x6f\xf0\x84\x1a\x3c\xf1\x06\x4f\xe8\x1c\x4f\xa4\xc1\x13\x69\xf0\x44\x1a\x3c\xa1\x06\x4f\xa8\xc1\x13\x6a\xf0\x84\x5a\x37\xf1\xd6\x45\xdf\xba\x5a\xd2\xa5\xd4\xb9\x14\xa8\xb5\x55\x38\x9c\x0b\xd9\x8f\x33\x03\x02\x19\x10\xc4\x80\x20\x06\x04\x31\x20\x90\x01\x81\x0c\x08\x64\x40\x20\x03\x82\x1b\x50\x7a\x03\x0a\x6a\x70\xe1\xad\xab\xb2\x66\x72\xe7\x42\x41\x6d\x2e\xa4\xcd\x65\x6f\xd2\x29\xc4\x8f\x42\xfc\x28\xc8\x8f\x82\xde\xd8\x0b\xf2\xa3\x20\x3f\x0a\xf5\x23\xfa\xf1\x2f\xd0\xf8\x17\x7c\xfc\x8b\x01\xbc\x59\x07\x19\xff\x82\x8c\x7f\x41\xc6\xbf\x40\xe3\x5f\xa0\xf1\x2f\xd0\xf8\x17\x68\xfc\x0b\x3e\xfe\x35\x79\xd7\x67\x62\xf4\xa3\x62\xa0\x51\x31\xf8\xa8\x18\x68\x54\x0c\x32\x2a\x06\x19\x15\x9b\xe6\x9d\x96\xfd\x12\xd0\x0f\x34\x53\x56\x21\xf3\x03\xcd\x94\x81\x66\xca\xe0\x33\x65\xf4\x33\x65\xa0\x99\x32\xf8\x4c\x19\x8a\x7a\x5c\x05\x3d\x17\xba\x46\x91\xc9\x33\xc8\xe4\x19\x64\xf2\x0c\x34\x79\x06\x9a\x3c\x03\x4d\x9e\x4d\xd8\x48\x27\x81\xe6\xd3\xe0\xf3\x69\xf4\xf3\x69\xa0\xf9\x34\xf8\x7c\x1a\x68\x3e\x0d\x32\x9f\x06\x19\x3b\x83\x8c\x9d\x81\xc6\xce\x40\x63\x67\xa0\x81\x32\xd0\x40\x19\x7c\xa0\x8c\x7e\xa0\x6c\x25\x98\x4e\x02\x0d\x9c\x4d\xd8\x48\x27\xc1\xc7\xd2\x70\xf4\x96\x4e\xc6\xd2\xaa\xed\xf8\xd8\x0c\x32\xbf\x06\x99\x5f\x03\x8d\xa5\x81\x06\xce\x26\x6c\x00\x82\x40\x63\x69\xa0\xb1\x34\xf8\xc0\x19\xfd\xc0\x19\x68\xe0\x0c\x3e\x70\x06\x1a\x38\x83\x0c\x9c\x41\x06\xce\x20\x03\x67\xd3\xb6\x01\x41\xa0\xc9\xb4\x09\x1b\x80\xa0\x5e\x95\xf9\x85\xe6\xd7\x40\xf3\x6b\x13\x36\x00\x41\xf0\x29\x37\xfa\xc9\x35\xd0\xe4\x1a\x7c\x72\x8d\x03\xf2\x8b\x4c\xae\x41\x26\xd7\x20\x93\x6b\xa0\xc9\x35\xd0\xe4\x1a\x68\x72\x0d\x34\x93\x06\x9f\x49\x9b\xbc\x2f\x0c\xf5\xf3\x6b\xa0\xf9\x35\xf8\xfc\x1a\x68\x7e\x0d\x32\xbf\x06\x99\x5f\x9b\xb6\x23\x0c\x91\x41\x37\xd0\xa0\x1b\x68\xd0\x0d\x34\xe8\x06\x1a\x74\x83\x0f\xba\xd1\x0f\xba\x81\x06\xd9\xe0\x23\x6a\x04\xfa\x10\x48\x67\xd7\xae\x51\x64\x90\x0d\x32\xc8\x36\x6d\x3e\x51\x5f\xbf\xba\xff\xcf\xbf\xdf\xdd\xbe\x38\x7b\x4c\xd8\x7c\x34\xe4\x06\x1a\x72\x03\x0d\xb9\x81\x86\xdc\xe0\x43\x6e\xf4\x43\x6e\x2b\xe1\xcf\x71\x34\x04\x37\x61\xeb\x73\x9c\x8f\xca\x55\x9e\x5f\x9d\xf7\x5f\xfe\x78\xfc\xe7\x8f\xab\x13\x77\xb7\x2f\x8e\x4f\xbf\x3b\x7e\xfe\xfc\xee\xf6\xc5\xc3\xd3\x97\xed\xba\xfc\xe5\xb4\x8e\xc9\x77\xb7\xaf\x4f\x0d\xff\xeb\x99\x06\x4d\x2c\xc4\x44\x32\x19\x07\x9a\x8c\xab\x90\x99\x88\x26\xe3\x40\x93\x71\x6c\x4c\xc6\xe5\x5a\xb4\xca\xdd\xb9\x2d\xfd\xd4\x5c\xd0\xd4\x5c\xf8\xd4\xdc\xe4\x5d\x14\xa3\xa0\x3f\xb0\x96\x01\xdb\x53\xb5\x39\x8e\x5d\x68\xd9\xa3\x23\x1f\x9b\x96\xfa\x58\xc8\x98\x5e\xd0\x98\x5e\xd0\x98\xde\x84\x8d\xa8\x56\xd0\x30\x5f\xd0\x30\x5f\x85\x53\x9f\xff\xf6\xcb\x9b\x57\x7f\x7b\x78\xfa\xf2\xfe\xc7\x7f\xbd\x7f\xf1\x7a\x7e\x15\x3c\xf9\xd3\x7a\x05\x3c\x0f\xb3\x4c\xce\x83\xd4\xd7\xd7\x46\xe4\x2d\x3d\x07\x28\x88\x03\x14\xce\x01\x0a\xe2\x00\x45\xc8\x61\x20\x1c\xa0\x08\xf1\x98\x8c\xfe\x4d\xdb\x4e\x8b\x05\x31\x82\x26\x6c\xa4\xc5\x82\x48\x42\x41\x24\xa1\x20\x92\xd0\x84\x8d\xb4\x58\x38\x6f\x98\x65\x78\x20\x7a\x16\x51\x10\x8b\x28\x9c\x45\x14\xf4\xf7\xed\xa2\xc4\x67\x42\x19\x9a\xb6\x1d\x71\x0a\xc1\x11\x05\xe1\x88\x82\x70\x44\x41\x38\xa2\x20\xd0\x50\x38\x68\x98\x65\xd8\xff\x1e\x42\x14\x04\x21\x0a\x87\x10\xc5\x50\xff\x8d\xf4\x9f\x40\x88\xa6\xe5\xaf\x33\x02\x28\x66\x6d\xce\xf3\x37\x57\x0f\x5f\x7d\x70\x7c\xfa\xfc\xf8\xe3\x27\xc7\xff\xfd\xe5\xcd\xef\xb7\x6f\xff\xed\xf9\xc3\x3f\x7d\x34\x7f\x88\xff\xfa\xc9\xf1\xfb\xaf\xde\xbd\xa1\x21\xa2\x51\x10\xd1\x28\x88\x68\x34\x61\x03\x19\x15\xc4\x3d\x0a\xe7\x1e\xb3\x0c\x9d\xec\x99\x48\x41\xcc\xa3\x70\x9a\x51\xd0\x1f\xd9\x8b\x13\x27\x09\xa4\x68\x5a\xee\x24\x01\x18\x05\x01\x8c\x82\x00\x46\x41\x68\xa2\x20\x34\x51\x38\x9a\x98\x65\xd8\xf2\x1e\x5b\xb4\x12\x8c\xaf\x05\x61\x8d\x26\x6c\xc4\xd7\xc2\xe1\x47\x41\xf0\xa3\x8c\xc4\x38\x02\x3f\x9a\x96\x1b\x47\xc0\x48\x41\xbc\xa3\x20\x92\x51\x10\xc9\x28\x88\x64\x14\xce\x28\x66\x19\x1a\xd7\xf3\x8b\x82\xf8\x45\xe1\xfc\xa2\xc9\xfb\x62\x29\xfa\x2b\x7d\x39\x10\x7b\x08\xeb\x68\x5a\x6e\x0f\xe1\x20\x4d\xdb\x91\x44\x0e\xd7\xc3\x54\x9f\xf1\xaf\xff\x7d\xf6\xe3\xb9\xbb\x87\x5d\xf9\x04\xc1\x96\x82\x60\x4b\x41\xb0\xa5\x09\x5b\xf9\x84\x23\x99\x59\x86\x27\xa5\x47\x30\x05\x21\x98\xc2\x11\x4c\x99\x90\xfb\x13\x71\x9f\x20\x98\x42\xc8\xca\xac\x25\xc6\xd5\xaa\xbc\x57\xed\x7a\x85\x90\x4c\x41\x48\xa6\x20\x24\x53\x10\x92\x29\x1c\xc9\x34\x79\x17\x22\x9b\xaf\x85\xde\xf5\x68\xa7\x20\xb4\x53\x38\xda\x29\x68\xfb\xa0\x04\xf1\x8e\x40\x9b\x12\x7b\xb3\x25\x21\x38\xb3\x96\x98\x8c\xb8\x4e\x41\x5c\xa7\x20\xae\x53\x10\xd7\x29\x9c\xeb\xcc\x32\x74\xa5\x67\x3e\x05\x31\x9d\xc2\x69\x4d\x41\x14\xa6\x09\x1b\x7f\x7d\x2c\x84\xd5\x14\xc2\x6a\x0a\x61\x35\x85\xb0\x9a\x59\x4b\xec\x42\x04\xa7\x20\x82\x53\x10\xc1\x69\xc2\x56\xf8\x44\x9c\xa7\x70\xce\x53\x20\xe7\xd1\x61\xb8\xe4\x3c\x4b\x69\x7e\x96\x67\xa6\x56\x01\x9a\x5a\xe5\xe4\x6d\xb2\x0a\xb9\x5d\x55\xcb\xed\x5a\xb5\xc4\xae\x55\x4b\xec\xaa\xda\xa5\x5d\xb5\x9a\xd8\xb5\x08\x9d\x5d\x27\x41\x86\xd3\x38\x72\x66\x57\x15\x12\x23\x16\x01\x18\x51\x65\x68\xc4\x25\x37\x59\x4b\xd1\x1b\xc1\xb8\xc9\x2a\xef\x48\x36\xf5\xda\xdc\x34\xc8\x58\x16\x6d\x13\xb8\xd5\x0b\xa1\xbb\x10\xc6\xac\x5a\xee\xae\xa4\xee\xe6\xe4\x65\x11\x32\x77\xd3\xaf\x02\x24\xbf\xc1\x7c\x06\xa2\x3f\x03\x39\x79\x59\x04\x7c\x06\x20\x53\x59\xb5\x2d\xc8\xa6\xc3\x70\x09\x5f\x96\x92\x78\x7f\x58\x18\x7c\xa9\x72\xf2\x56\x5c\x05\x78\x00\x20\x7c\x59\xb5\xdc\x57\xc8\x5b\x56\x6d\x2b\xda\xd6\x0b\x93\x03\x90\xe3\x9a\x55\xa0\xd1\x76\xb9\x2a\x3b\x26\x15\xea\x78\x7f\x00\x72\xa8\xb3\x0a\x34\xda\x2e\x57\xe1\x63\x02\xd1\x8f\x0e\xc3\x25\xfa\x59\x4a\x62\xbd\xfb\x0c\xfd\x54\x39\x77\x1f\xa2\x9f\xaa\x41\xf7\x21\xde\xa9\xda\x45\x88\x6d\xd5\xdc\xb8\x9c\xe1\x9c\x84\xd9\x12\xeb\x2d\xc9\xe9\xcc\x22\xe0\x66\xdb\xde\xdc\x5a\xaf\x85\xc6\x5c\x92\x9c\xa5\x34\xbf\x17\x5f\x1a\xc3\x48\x4e\x95\xf3\xf7\x65\x48\x72\xaa\x06\x8d\x81\x24\x67\xd5\x72\xd3\x7c\x36\x4d\xca\x85\x69\x15\xe3\x0c\xbd\x69\x39\xdf\x39\x09\x49\xc4\x69\x42\x6e\x1a\xe3\x3b\x55\x86\x46\x5c\xf2\x9d\xa5\x94\xa5\x1a\x46\x66\xaa\x9c\x1b\x91\x22\x9b\xee\xb8\x40\x7e\x53\x35\x68\x17\xe4\x37\xab\x96\xdb\x35\x9e\xec\x8a\x0b\xbb\x2a\xd5\x29\xbd\x5d\x39\xd5\x39\x09\x59\x54\xad\x42\x6e\x17\xa3\x3a\x55\x86\x76\x5d\x52\x9d\xb5\x04\x70\xdc\xaa\x97\xde\x4e\x46\x7d\xaa\x9c\xbf\xe1\x41\x92\x53\x35\x68\x14\x24\x39\xab\x96\x1b\x75\x02\x34\x32\x5d\x18\x55\x39\x4c\xf4\x46\xe5\xe8\xe5\x24\x80\x90\x9a\xa3\x97\x45\xc0\x46\x41\xa8\xa2\xc3\x70\x09\x55\xd6\x52\x12\x52\x19\x54\x59\xe5\x7d\x21\x35\xdf\x81\xa9\x42\x35\xad\xfe\xd5\xff\x42\xb0\xe1\x5c\xc8\x1e\x17\xfa\xba\xae\xc9\x24\xe7\x01\xf2\x9b\xaa\x4d\x35\x6e\xbc\xef\x6b\x85\x33\x53\xef\x6b\x0e\x67\x56\x61\x2b\x9e\x4e\x28\x9e\xe6\x08\x67\x11\xb0\xfb\x10\xcb\xac\xda\x8e\x78\x7a\xc9\x6f\x96\x52\x16\x4f\x19\xbf\xa9\x72\xfe\xf6\x1b\xc8\x7a\x08\x6f\x56\x2d\x37\x15\xf2\x9a\x55\xdb\x91\x4d\x23\x8d\x38\x39\xd8\x59\x84\xcc\xfd\x40\x11\x27\x07\x3b\x8b\x80\x7d\x8d\xff\x47\xc4\x81\x10\x48\x87\xe1\x12\x02\x2d\xa5\x2c\xe2\x30\x08\x54\xe5\xdc\xda\x82\xac\x85\x6c\x67\xd5\x72\x6b\x21\xdb\x59\xb5\x1d\xd6\x26\x10\xa8\x56\x4b\x35\xfc\xc2\xda\x2a\x68\xfa\xb9\x90\x03\xa2\x93\x30\xdb\xae\xbd\xed\x39\xfa\x59\x04\x6c\x3b\x41\x3f\xd2\xa3\x9f\x5a\x9a\x1d\xbb\xb0\x52\x38\xfa\x91\x7c\x6d\x67\x15\x28\xcf\xab\x57\xa5\x86\x0b\xa1\x43\x32\x60\xc3\x85\xd0\x21\x19\xb2\x40\x2b\x03\x08\xb4\x82\xe8\x90\x0c\x20\xd0\x0a\xa2\x43\xc2\xe9\x90\x10\x3a\x24\x3d\x1d\xaa\xa5\x24\xd0\x0a\xa7\x43\x92\x6f\xd5\x54\x21\x77\x81\x50\x1c\x11\xe2\x02\xa1\x38\x22\x59\x4e\x15\x01\x39\x55\x10\xc5\x91\x7c\x33\xa6\x0a\xb9\x0b\x9c\xcf\x08\xe1\x33\xd2\x63\x97\x56\x82\x39\xb5\xe9\x7d\x4e\x15\x8e\x65\x24\xdf\x89\xa9\x42\xee\x92\xee\x89\x3c\x42\xc8\x8d\x28\xf1\x92\x90\x1b\xd1\x2c\xf2\x88\x82\xc8\x53\x85\xf9\x3d\xe1\xd2\x4b\x05\x61\x46\x10\x6a\x11\x0e\x51\x84\x40\x94\xa6\x6d\x87\x19\xe9\x69\x4b\x2d\x25\x61\x46\x38\x6d\x91\x7c\xd1\xa6\x0a\xb9\xa9\x04\xb5\x88\x11\xbb\x08\x86\x69\xda\xf6\x27\x9e\x9c\x78\xcd\x29\xb6\xbc\xef\xab\x65\x3c\x6d\x15\xb2\xd7\xa8\x01\x84\x26\x88\xd7\x34\x61\x03\xa1\x09\xa7\x3a\x42\x48\x8d\xf4\xa4\xa6\x96\x12\x84\x26\x9c\xd4\x48\xbe\x73\x53\x85\xdc\x54\x82\x69\xc4\x89\xa9\x04\xd3\xc8\xbe\x3b\x5e\xd4\x0b\xfb\x84\x2a\xf9\xbe\xce\x22\x64\xa6\x3a\x48\xa8\x82\x78\x8e\x70\x9e\xd3\xe4\x5d\x09\x55\x08\xfb\x91\x9e\xfd\xd4\x52\x92\x50\x85\xb3\x1f\xc9\xb7\x72\xaa\x90\x5b\x4b\x90\x8e\x8c\xc4\x5a\x82\x74\x64\xdf\x77\x95\xea\x85\x7d\x42\x95\x11\x24\xd4\x26\xa4\x09\x55\x10\x17\x92\x11\x24\x54\x41\x5c\x48\x38\x17\x12\xc2\x85\xa4\xe7\x42\xb5\x94\x25\x54\xce\x7d\x24\xdf\xe0\x59\x85\x0d\x8c\x27\x07\x64\x38\x41\x43\x72\x20\x86\x13\x34\x24\x87\x34\x1b\x1d\xae\x4f\x43\xdc\xcd\xd5\xf1\xa7\x9f\xce\xaa\x79\x62\x3a\xa0\x4f\xd9\x7c\x57\xa7\x0a\xb9\x83\x1c\x18\x09\x01\x46\xd2\x03\xa3\x56\xc2\x89\x69\x42\x89\x89\x03\x25\xc9\xb7\x74\xaa\x90\x7b\x47\xf0\x8f\x10\xfc\x23\x04\xff\xc8\x94\x61\xbd\xb9\x9a\x78\x37\x01\xd8\x27\x08\x0a\xc9\x04\x60\x9f\x20\xdc\x23\x1c\xf7\x08\xc1\x3d\xd2\x53\x9c\x56\xea\x61\x9f\x70\x8a\xd3\xe4\x5d\xb0\x4f\xf2\x8d\x9d\x2a\xe4\x3e\xc6\xae\xe4\x4b\xb8\x90\x10\x2e\x24\x84\x0b\x49\xa4\xc9\x37\x52\xb7\x03\xe5\x61\x04\x81\x9a\xb0\x81\x00\x25\x50\x6a\x46\xa8\x48\x38\x2a\x12\x82\x7f\x9a\xb6\x23\x35\xf7\x9c\xa8\x96\xb2\xd4\xcc\x39\x91\xe4\xcb\x42\x55\xc8\x0f\xc4\x7a\x5b\x93\xb3\xe7\x33\x9e\x9e\x4f\x2d\xfd\xf1\xf2\xc3\x87\x67\xdf\xdc\x7f\xf1\xec\xfe\x2f\x3f\xdd\xdd\x3e\xf9\xe3\xe5\x5f\xde\x5d\xa4\xfd\xcf\xe5\xa7\x86\x20\x27\x21\xc8\x49\xf6\x22\x27\x29\x69\x00\x2f\xe9\xf1\xaa\x55\x7d\xaf\x9a\x3d\x5c\x9e\xdc\x11\x8f\x92\x82\x92\xfb\x49\x50\xdd\x6a\x27\x38\x80\x65\x57\xbc\xe7\x68\x4b\x7b\x7c\x55\x4b\x49\x84\x57\x8e\xaf\xaa\x9c\x9f\xf8\xa6\x6d\x9f\x78\x45\xeb\x4f\x8a\xe8\x96\x12\xba\xa5\x84\x6e\x29\xa1\x5b\x4d\xdb\x3e\x5b\x5a\x97\xa4\xec\xfc\x6c\xb5\xea\xfc\xcf\x3e\xfa\x9f\xbb\xc7\xdf\xdc\x3d\x7e\x79\xf7\xf8\xc9\x99\x1c\xa7\xec\xf0\xfe\xd1\xd3\x01\x24\xcc\x26\xf4\x19\x44\x11\x22\x53\x8e\xc8\xb4\xc7\x60\xb5\x94\x04\x42\xe5\x18\xac\xca\xc0\x73\xb4\x14\xa5\x08\x91\x29\x41\x64\x4a\x10\x99\x12\x44\xa6\x92\x81\xca\xb9\xda\xbf\xfa\x55\x00\xbe\x54\x04\xce\x54\x16\x7c\x99\x3b\x8d\xf0\x99\x72\x7c\xa6\x3d\x22\xab\xa5\x04\x54\x2a\x47\x60\x55\x06\x0e\xa1\xad\x25\x45\x78\x4c\x09\xf8\x52\x02\xbe\x94\x80\x2f\xd5\x2c\xa8\xcf\xd5\xc4\x21\x05\x41\x5d\xd1\xe6\x91\xae\x5f\x27\xcb\x1d\x42\x50\x4c\x39\x14\xd3\x9e\x67\xb5\x12\x8c\xe4\x4d\xef\x23\xb9\x72\xde\x55\x65\xe0\x20\xda\x3c\x52\xc4\xc2\x94\xb0\x30\x25\x2c\x4c\x09\x0b\x53\xcb\xe2\xfa\x5c\x4d\x1c\x34\x10\xd7\x15\x81\x2f\xb5\x25\xae\xe7\x0e\x22\xfc\xa5\x1c\x6c\x69\x0f\xaf\x5a\xa9\x0f\xe6\xca\xe1\x55\x93\x77\x05\xf3\x7a\x2d\x70\x13\xad\x2b\x29\x82\x60\x4a\x20\x98\x12\x08\xa6\x04\x82\xe9\x5e\x08\xa6\x9e\x05\xab\xb9\x9a\xd8\xee\x9b\xc1\x4a\xd3\x9b\xc5\xae\x42\xf6\x01\x98\x62\xb5\xe4\x71\x5b\xfc\xca\xcf\x0f\x22\x6d\xba\xe3\x5e\xb2\xcb\x55\xf8\x94\xf5\x1c\xad\x96\xb2\x7c\xc5\x39\x5a\x95\xc1\xc9\x19\xf7\xe6\x2b\xb4\x88\xa5\x08\xc6\x29\x81\x71\x4a\x60\x9c\x12\x18\xa7\x7b\x61\x9c\x8e\x19\x67\x9d\xab\xc9\x11\xcb\xbf\x74\xb7\x08\xd9\x3b\xcb\xb8\xd0\xd7\xfc\x64\x20\x18\xa7\x1c\xc6\xe9\xee\x9b\xe0\xea\xa0\x3d\x9c\xab\xa5\x84\xb3\x2a\x87\x73\x55\x06\xe7\x03\x81\x3b\x45\x48\x4e\x09\x92\x53\x82\xe4\x94\x20\x39\xdd\xf7\xbd\xbb\x7a\x61\xcf\x60\x35\x65\x77\x7a\x40\xb9\xf9\x80\xc9\xac\xa2\x45\x30\x3d\x2c\x64\x36\x3f\x12\x88\xee\x29\xa7\x7b\xda\x13\xbc\x5a\xca\x22\x37\x27\x74\x55\x06\x36\xa3\x15\xaf\x26\x6c\x6c\x10\x28\x62\x7c\x4a\x18\x9f\x12\xc6\xa7\x84\xf1\xe9\x94\x06\xf3\x94\xf1\xe9\x84\x82\x39\x62\x7c\x3a\xf1\x60\x8e\x48\x9f\x72\xd2\xa7\x3d\xcd\xab\xa5\x2c\x98\x73\x9a\x57\x65\xe0\x23\xda\xd7\x52\x44\xef\x94\x70\x39\x25\x5c\x4e\x09\x97\xd3\x48\x63\x5d\xca\xe5\x34\x50\xac\x0b\xf4\xe1\x1d\x3c\xd6\x21\xee\xa6\x9c\xbb\x69\x8f\xcc\x5a\x29\x89\x75\x1c\x99\xe9\xee\x1b\x07\x2f\xd7\x02\x37\xd1\x8a\x96\x22\xf4\xa6\x65\x0f\x8b\x55\x42\xd5\x94\x50\x35\x25\x54\x4d\x4b\xc6\x62\x35\x85\x65\x5a\x00\x8b\x55\x44\xc2\x34\xbd\x5f\x71\xf2\x7b\x35\x16\x9b\x9f\x0c\x04\xc4\x94\xa3\x2e\xeb\x51\x57\x2d\x25\x30\xd5\x38\xea\x32\x82\xba\x0c\x11\x2c\x43\x04\xcb\x08\xc1\x32\x42\xb0\x8c\x10\x2c\xdb\x4b\xb0\x6c\xc8\x42\xbc\x0d\x99\xe1\xad\xca\x42\xbc\x0d\x20\xc4\x1b\xda\x00\xb3\x81\xc6\x73\x43\x90\xab\x09\x1b\xf1\xdc\x38\x0a\xb3\x1e\x85\xd5\x52\x12\xcf\x8d\xa3\x30\x23\x28\xac\x69\xdb\xf1\xdc\xd0\x5a\x99\x21\x66\x66\x84\x99\x19\x61\x66\x46\x98\x99\xed\xbb\x53\x53\xbd\xb0\x8f\xe7\x96\xc2\x35\x43\xdf\x2d\x34\x04\xd7\x4c\x68\x3c\x37\x04\xd7\x8c\xc3\xb5\x26\xef\x8a\xe7\xd6\x83\xb8\x5a\x4a\xe2\xb9\x71\x10\x67\x04\xc4\x19\xda\x53\x33\x04\xe2\x8c\x80\x38\x23\x20\xce\x08\x88\x33\xcd\x12\x99\xa5\x20\xce\x14\x24\xb2\x26\x48\x96\xba\x0d\xed\xac\x99\xd2\xb4\x66\x08\xd2\x19\x87\x74\xd6\x43\xba\x5a\x4a\xd2\x9a\x71\x08\x67\x04\xc2\x19\x5a\x48\xb3\x94\xce\x75\x67\x0c\xa1\x3a\x23\xa8\xce\x08\xaa\x33\x82\xea\xcc\x32\xd8\x6a\x29\xaa\x33\x03\xb0\xd5\x10\xaa\x33\xa3\xb0\xd5\x10\xaa\x33\x8e\xea\xac\x47\x75\x46\xef\x77\xbd\xea\x3d\x6c\x35\x8e\xf2\x8c\xe0\x39\x43\x78\xce\x10\x9e\x33\x82\xe7\x8c\xe0\x39\x23\x78\xce\x3c\x4b\xe5\x96\x52\x37\x73\x90\xca\x0d\x2d\xa4\x99\xd3\x54\x6e\x08\x96\x19\xc7\x60\xd6\x63\xb0\x56\xea\x53\xb9\x71\x0c\xd6\xe4\x5d\xa9\xdc\x08\x32\x33\xb4\x96\x66\x88\x84\x55\x61\x2b\x95\x1b\xe1\x65\x46\x78\x99\x11\x5e\x66\x63\x96\xca\x2d\xc5\x60\x36\x82\x54\x6e\x08\x83\x59\xfa\xbf\x87\x4a\x7e\x2f\x96\xca\x0d\xc1\x32\xe3\xb0\xcc\x7a\x00\x56\x4b\x59\x2a\xe7\x00\xcc\x08\x00\x33\x04\xc0\x0c\x01\x30\x23\x00\xcc\x08\x00\x33\x02\xc0\x6c\x2f\x00\xb3\x43\x1a\xac\x52\x00\x66\xf9\xed\xa8\x16\x21\xfb\xb8\x3d\xf0\x60\x85\x20\x97\x71\xc8\x65\xbb\xef\xed\xad\x83\xf5\x40\xac\x96\xb2\x60\xc5\x81\x98\x11\x20\x66\x68\x9d\xcd\x10\xea\x32\x82\xba\x8c\xa0\x2e\x23\xa8\xab\x69\x3b\x6c\x4f\x6e\x5b\x55\xab\x89\xed\x13\xe0\x9e\x4d\x48\xb9\xa7\x21\x5e\x66\x13\xe5\x9e\x86\x78\x99\x71\x5e\x66\x3d\x2f\xab\xa5\x84\x7b\x1a\xe7\x65\x46\x78\x99\x21\x5e\x66\x88\x97\x19\xe1\x65\x46\x78\x99\x11\x5e\x66\x91\xe6\xe7\x94\x97\x59\xa0\xfc\x8c\xf6\xd8\x2c\x78\x46\x46\xbc\xcc\x38\x2f\xb3\x9e\x97\xd5\x52\x96\x91\x39\x2f\x33\xc2\xc0\x0c\xad\x9f\x19\x62\x60\x46\xe8\x96\x11\xba\x65\x84\x6e\x59\x49\xd3\x6f\x4a\xb7\xac\xa0\xf4\x8b\xe8\x96\x15\x9e\x7e\x11\xb7\x32\xce\xad\xbc\xe7\x56\xad\x04\xd3\x6f\xd3\xfb\xf4\xeb\x9c\x6b\x39\xe1\x5a\x8e\xb8\x96\x23\xae\xe5\xc3\x9e\xbc\xe4\x84\x7e\x39\xa1\x5f\x4e\xe8\x97\x0f\x59\x5e\xf2\x14\x6a\xf9\x00\xf2\x92\xa3\xbd\x2b\x1f\x68\x12\x72\x44\xac\x9c\xb3\x28\xef\x59\x54\x2d\x25\x49\xc8\x39\x8b\x72\xc2\xa2\x1c\xad\x65\x39\x42\x4c\x4e\x10\x93\x13\xc4\xe4\x04\x31\xf9\x5e\xc4\xe4\x92\xf1\x49\x4f\x11\x53\xab\x32\x3e\xe9\xe9\x2d\xc4\x57\x21\x79\x55\xbb\x50\x3e\xe9\x88\x42\xf9\x8e\x7b\x87\x2f\x57\xe1\x33\xd1\xf3\xa7\x5a\x4a\xf8\xa4\x73\xfe\xe4\x84\x3f\x35\x6d\x9b\x4f\x3a\x02\x55\x8e\x40\x95\x13\x50\xe5\x04\x54\x39\x01\x55\xbe\xf7\x26\x57\xae\x59\x8c\xf6\x94\x68\x39\xba\xf5\x95\xa3\xd5\x32\x57\x1a\xa3\x1d\x51\x2b\xe7\xd4\xaa\xc9\xbb\x62\xb4\xf7\x84\xab\x96\x92\x18\xed\x9c\x70\x39\x21\x5c\x8e\xd6\xcc\x1c\xb1\x2b\x27\xec\xca\x09\xbb\x72\xc2\xae\x7c\xef\x57\x2e\xdd\xb2\x18\xed\x29\xe4\x72\x03\x31\xba\x09\x69\x8c\x76\x04\xc0\xdc\x68\x8c\x76\x04\xc0\x9c\x03\x30\xef\x01\x58\x2d\x25\x31\xda\x39\xe0\x72\x02\xb8\x1c\x01\x2e\x4f\xbf\x9d\xd9\xb5\x1d\x61\x30\x27\x18\xcc\x09\x06\x73\x82\xc1\xdc\xb3\x28\xe7\x29\x06\x73\x07\x51\xce\xd1\x66\x99\x3b\x8d\x72\x8e\x30\x98\x73\x0c\xe6\x3d\x06\x73\x7a\xc7\xf4\x55\x4f\xa2\x1c\xc7\x64\x4e\xd0\x97\xa3\x25\x30\x47\xe8\xcb\x09\xd4\x72\x02\xb5\x9c\x40\x2d\x1f\x33\x90\xe9\x29\xd4\xf2\x11\x80\x4c\x1f\x91\x83\x23\x05\x99\x8e\x70\x95\x73\x5c\xe5\x3d\xae\x6a\xa5\x1e\x64\x3a\xc7\x55\xbe\xfb\xd6\xe9\xcb\xb5\xc0\x4d\x84\xb6\x1c\xa1\xad\x2a\x6c\x06\x73\x02\xc0\x9c\x00\x30\x27\x00\xcc\x0f\x69\x30\x4f\xb9\x96\x1f\x50\x30\x47\xcb\x5b\x4d\xd8\x00\x99\x7e\xe0\xf1\x1d\xd1\x2f\xe7\xf4\xcb\x7b\xa2\x55\x4b\x59\x7c\xe7\x44\xcb\x09\xd1\x72\xb4\xe2\xe5\x88\x68\x39\x21\x5a\x4e\x88\x96\x13\xa2\xe5\x7b\x89\x96\x4f\x69\x7c\x4f\x89\x56\xab\xd2\xf8\x3e\xa1\xf8\x8e\xc0\x96\x4f\x3c\xbe\x23\xb0\xd5\x84\xad\xf8\xce\xf1\x97\xf7\xf8\xab\x96\xb2\xf8\xce\xf1\x97\x13\xfc\xd5\xb4\x1d\xf1\x1d\x71\x32\x47\x9c\xcc\x09\x27\x73\xc2\xc9\x9c\x70\x32\xdf\x7b\x1f\x30\x4f\x6e\xf0\x5e\xab\xc9\xe1\x09\x94\xe3\xd0\x02\x9a\x07\xcf\x6a\x08\xa8\x39\x07\x6a\xde\x03\xb5\x5a\xca\xb2\x1a\x07\x6a\x4e\x80\x9a\xa3\xa5\x32\x47\x40\xcd\x09\x50\x73\x02\xd4\x9c\x00\x35\x2f\x19\xf2\xf4\x14\xa8\x79\x01\xc8\xd3\x0b\x5e\x19\xf0\x82\xdc\x2b\x14\x87\x3a\x82\x6d\xce\x61\xdb\xd8\xc3\xb6\x11\xdd\xc9\x7d\xe4\x30\x6d\x24\x30\x6d\x44\x30\x6d\x4c\xef\x01\x76\xf9\xc2\x18\x11\x72\x1b\x09\x4c\x1b\x09\x4c\x1b\x09\x4c\x1b\x87\x2c\x69\x8f\x29\x4c\x1b\x07\x90\xb4\x47\xb4\xfe\x35\x0e\x34\x69\x8f\x08\xa6\x8d\x0c\xa6\xfd\x5f\x00\x00\x00\xff\xff\xe1\x66\xfb\x18\xb3\x8e\x00\x00")

func assetHolidaysYmlBytes() ([]byte, error) {
	return bindataRead(
		_assetHolidaysYml,
		"asset/holidays.yml",
	)
}

func assetHolidaysYml() (*asset, error) {
	bytes, err := assetHolidaysYmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/holidays.yml", size: 36531, mode: os.FileMode(436), modTime: time.Unix(1546901627, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"asset/holidays.yml": assetHolidaysYml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"asset": &bintree{nil, map[string]*bintree{
		"holidays.yml": &bintree{assetHolidaysYml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
